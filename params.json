{
  "name": "Grunt-boddha-zero",
  "tagline": "zero",
  "body": "# boddha-zero\r\n\r\n> boddha for zero\r\n\r\n## Getting Started\r\nThis plugin requires Grunt.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install boddha-zero --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('boddha-zero');\r\n```\r\n\r\n## The \"boddha_zero\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `boddha_zero` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  boddha_zero: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.who\r\nType: `String`\r\nDefault value: `buddha'\r\n指明是否佛祖还是神兽来保佑我们的代码\r\n\r\n#### options.commentSymbol\r\nType: `String`\r\nDefault value: `//`\r\n\r\n文件中拼接佛祖或神兽时使用的注释符\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nIn this example, the default options are used to do something with whatever. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result would be `Testing, 1 2 3.`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  boddha_zero: {\r\n    options: {},\r\n    files: {\r\n      'dest/default_options': ['src/testing', 'src/123'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### Custom Options\r\nIn this example, custom options are used to do something else with whatever else. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result in this case would be `Testing: 1 2 3 !!!`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  boddha_zero: {\r\n    options: { \r\n        'who' : 'buddha',\r\n        'commentSymbol':'//'\r\n      },\r\n    dist:['examples/*.js']\r\n  },\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n## License\r\nCopyright (c) 2016 zero. Licensed under the MIT license.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}